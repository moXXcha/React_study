on:
  push:
    branches:
      - main

name: push-ecr

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Configure AWS Credenciatials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-northeast-1
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env: 
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOGITORY: ${{secrets.AWS_DEV_REPOGITORY_NAME}}
        
        run: |
          IMAGE_TAG=$(cat ./${ISSUE_NUMBER}/version.json | jq -r .version)
          docker build -t $ECR_REGISTRY/$ECR_REPOGITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOGITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOGITORY:$IMAGE_TAG"
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with: 
          task-definition: task-definition.json
          container-name: darts-dev-container
          image: ${{steps.build-image.outputs.image}}
      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{steps.task-def.outputs.task-definition}}